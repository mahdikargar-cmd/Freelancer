version: "3.8"

services:
  redis:
    image: redis:alpine
    container_name: redis
    networks:
      - app-network

  postgres:
    image: postgres:17
    container_name: postgres
    environment:
      POSTGRES_DB: deadlinee
      POSTGRES_USER: freelancer
      POSTGRES_PASSWORD: 13521380Mm$$#
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network
    
  backend:
    build: ./backend
    container_name: backend
    ports:
      - "8080:8080" 
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/deadlinee
      SPRING_DATASOURCE_USERNAME: freelancer
      SPRING_DATASOURCE_PASSWORD: 13521380Mm$$#
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
    volumes:
      - uploads:/app/uploads
    networks:
      - app-network
    depends_on:
      - postgres
      - redis

  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: https://deadlinee.ir
    networks:
      - app-network

  nginx:
    build: ./nginx
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/certs:/etc/nginx/certs
      - ./nginx/dhparam.pem:/etc/nginx/dhparam.pem
      - uploads:/uploads
    networks:
      - app-network
    depends_on:
      - backend
      - frontend

volumes:
  uploads:
    driver_opts:
      type: none
      device: /home/admin/data/uploads
      o: bind
  pgdata:
    driver_opts:
      type: none
      device: /home/admin/data/pgdata
      o: bind

networks:
  app-network:
    driver: bridge
